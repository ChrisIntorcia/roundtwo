rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users and their subcollections
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      match /followers/{followerId} {
        allow read, write: if request.auth != null;
      }

      match /following/{followingId} {
        allow read, write: if request.auth != null;
      }

      match /products/{productId} {
        allow read: if true;
        allow create: if request.auth.uid == userId;
        allow update: if request.auth.uid == userId || (
          request.auth != null &&
          resource.data != null &&
          request.resource.data.diff(resource.data).changedKeys().hasOnly(['quantity']) &&
          request.resource.data.quantity < resource.data.quantity
        );
        allow delete: if request.auth.uid == userId;
      }

      match /purchases/{purchaseId} {
        allow read, write: if request.auth.uid == userId;
      }

      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }

      match /notificationPrefs/{document} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Global Products Collection
    match /products/{productId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.sellerId;
      allow update: if request.auth.uid == resource.data.sellerId || (
        request.auth != null &&
        resource.data != null &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['quantity']) &&
        request.resource.data.quantity < resource.data.quantity
      );
      allow delete: if request.auth.uid == resource.data.sellerId;
    }

    // Etsy Candy (Scraped Products)
    match /etsy_candy/{docId} {
      allow read: if true;
    }

    // Livestreams and nested subcollections
    match /livestreams/{streamId} {
      allow read: if true;
      allow write: if request.auth != null;

      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }

      match /viewers/{viewerId} {
        allow read, write: if request.auth != null;
      }
    }

    // Sellers
    match /sellers/{sellerId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == sellerId;
    }

    // Purchases
    match /purchases/{purchaseId} {
      allow read, write: if request.auth != null;
    }

    // Transactions
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.sellerId;
    }

    // Orders
    match /orders/{orderId} {
      allow read: if request.auth.uid == resource.data.sellerId || request.auth.uid == resource.data.buyerId;
      allow list: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.buyerId;
      allow update: if request.auth.uid == resource.data.sellerId;
    }

    // Chats and Messages
    match /chats/{chatId} {
      allow read, write: if request.auth != null;

      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }

    // Messages and activity are only accessible to signed-in users
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }

    match /activity/{activityId} {
      allow read, write: if request.auth != null;
    }
  }
}
